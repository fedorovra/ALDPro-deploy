#! /bin/sh

. ./setup-vars

returncode=0
while test $returncode != 1 && test $returncode != 250
do
returncode=$?
exec 3>&1
value=`$DIALOG  --title "Конфигуратор ALDPro" --ok-label "Submit" \
	--insecure "$@" \
	--mixedform "Введите настройки первичного контроллера домена:" \
	20 52 0 \
	"Пароль администратора домена: " 1 1	"password" 1 30 20 0 1 \
	"Повторите ввод пароля       : " 2 1	"password" 2 30 20 0 1 \
	"FQDN                        : " 3 1	"dc1.test.loc" 3 30 20 0 0 \
	"IP-адрес контроллера        : " 4 1	"192.168.122.216" 4 30 20 0 0 \
	"Маска сети                  : " 5 1	"255.255.255.0" 5 30 20 0 0 \
	"Шлюз                        : " 6 1	"192.168.122.1" 6 30 20 0 0 \
	2>&1 1>&3`
returncode=$?
exec 3>&-

	case $returncode in
	$DIALOG_CANCEL)
		"$DIALOG" \
				--clear \
				--yesno "Вы хотите выйти?" 10 30
		case $? in
		$DIALOG_OK)
			break
			;;
		$DIALOG_CANCEL)
			returncode=99
			;;
		esac
		;;
	$DIALOG_OK)
		password1=$(echo $value | paste -s -d' ' | awk '{ print $1 }')
		password2=$(echo $value | paste -s -d' ' | awk '{ print $2 }')
		FQDN=$(echo $value | paste -s -d' ' | awk '{ print $3 }')
		IP=$(echo $value | paste -s -d' ' | awk '{ print $4 }')
		MASK=$(echo $value | paste -s -d' ' | awk '{ print $5 }')
		GW=$(echo $value | paste -s -d' ' | awk '{ print $6 }')

		if [[ $password1 != $password2 ]]; then
			status=0
			"$DIALOG" \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Пароли не совпадают!" 10 40
		else
			cat > /home/localadmin/ALDPro-deploy/inventory/hosts << END
all:
  hosts:
    localhost:
      ansible_user: ansible
      ansible_become: true
      role: first_dc
      admin_password: $password1
      FQDN: $FQDN
      ip_address: $IP
      ip_netmask: $MASK
      ip_gateway: $GW
END
			# echo 0 > /tmp/log.txt
			echo 0 > /tmp/a.txt
			echo "Подготовка Ожидает Обновление_ОС Ожидает Установка_пакетов Ожидает Настройка_контроллера Ожидает" >> /tmp/b.txt
			(python3 -c 'import ansible_runner; a = ansible_runner.run(private_data_dir="/home/localadmin/ALDPro-deploy", playbook="playbook.yaml", quiet=True,)'; sleep 5; pkill tail) &
			# tail -f /tmp/log.txt | $DIALOG --gauge "" 0 60 0
			while true;
			do
				a=$(cat /tmp/a.log)
				b=$(cat /tmp/b.log)
				$DIALOG \
						--title "Выполнение работ" "$@" \
						--mixedgauge "Пожалуйста, дождитесь окончания работ" \
						0 0 $a $b
				if [[ $a == "100" ]]; then 
					sleep 5
					break
				fi
				sleep 1
			done
			$DIALOG \
					--title "" \
					--clear "$@" \
					--msgbox "Работы завершены.\n\Пожалуйста, перезагрузите компьютер" 10 41
			case $? in
			$DIALOG_OK)
				break
				;;
			esac
		fi
		;;
	$DIALOG_HELP)
		echo "Button 2 (Help) pressed."
		exit
		;;
	$DIALOG_EXTRA)
		echo "Button 3 (Extra) pressed."
		exit
		;;
	*)
		echo "Return code was $returncode"
		exit
		;;
	esac
done