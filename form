#!/usr/bin/env bash

. ./setup-vars

PASSWORD1=""
PASSWORD2=""
HOSTNAME=""
DOMAIN=""
IP=""
MASK=""
GW=""

returncode=0
while test $returncode != 1 && test $returncode != 250
do
	returncode=$?
	exec 3>&1
	value=`$DIALOG --title "Конфигуратор ALD Pro" \
		--help-button \
		--insecure "$@" \
		--mixedform "\nВведите настройки первичного контроллера.\nВсе поля обязательны для заполнения\n" \
		20 55 0 \
		"Домен                        : " 1 1 "$DOMAIN"    1 32 20 0 0 \
		"Имя компьютера               : " 2 1 "$HOSTNAME"  2 32 20 0 0 \
		"IP-адрес                     : " 3 1 "$IP"        3 32 20 0 0 \
		"Маска сети                   : " 4 1 "$MASK"      4 32 20 0 0 \
		"Шлюз                         : " 5 1 "$GW"        5 32 20 0 0 \
		"Задайте пароль администратора: " 6 1 "$PASSWORD1" 6 32 25 0 1 \
		"Повторите ввод пароля        : " 7 1 "$PASSWORD2" 7 32 20 0 1 \
		2>&1 1>&3`
	returncode=$?
	exec 3>&-

	case $returncode in
	$DIALOG_CANCEL)
		"$DIALOG" \
				--clear \
				--yesno "Вы хотите выйти?" 10 30
		case $? in
		$DIALOG_OK)
			break
			;;
		$DIALOG_CANCEL)
			returncode=99
			;;
		esac
		;;
	$DIALOG_ESC)
		"$DIALOG" \
				--clear \
				--yesno "Вы хотите выйти?" 10 30
		case $? in
		$DIALOG_OK)
			break
			;;
		$DIALOG_CANCEL)
			returncode=99
			;;
		esac
		;;
	$DIALOG_OK)
		PASSWORD1=$(echo $value | paste -s -d' ' | awk '{ print $6 }')
		PASSWORD2=$(echo $value | paste -s -d' ' | awk '{ print $7 }')
		HOSTNAME=$(echo $value | paste -s -d' ' | awk '{ print $2 }')
		DOMAIN=$(echo $value | paste -s -d' ' | awk '{ print $1 }')
		IP=$(echo $value | paste -s -d' ' | awk '{ print $3 }')
		MASK=$(echo $value | paste -s -d' ' | awk '{ print $4 }')
		GW=$(echo $value | paste -s -d' ' | awk '{ print $5 }')
		
		if [[ ! $PASSWORD1 || ! $PASSWORD2 || ! $HOSTNAME || ! $DOMAIN || ! $IP || ! $MASK || ! $GW ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Заполнены не все поля!\nПожалуйста, проверьте вводимые данные" 10 40
		elif [[ $PASSWORD1 != $PASSWORD2 ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Пароли не совпадают!" 10 40
		elif [[ ! $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).netmask)' $IP/$MASK 2>/dev/null) ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Ошибка во вводимых данных!\nПроверьте, пожалуйста, корректность IP-адреса и маски сети" 10 40
		elif [[ ! $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).netmask)' $GW/$MASK 2>/dev/null) ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Ошибка во вводимых данных!\nПроверьте, пожалуйста, корректность адреса шлюза" 10 40
		elif [[ $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).network)' $IP/$MASK 2>/dev/null) != $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).network)' $GW/$MASK 2>/dev/null) ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Ошибка во вводимых данных!\nIP-адрес контроллера и шлюз в разных сетях" 10 40
		elif [[ ! $HOSTNAME =~ ^[0-9a-zA-Z][0-9a-zA-Z_-]*[0-9a-zA-Z]$ ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Имя компьютера содержит недопустимые символы!" 10 40
		elif [[ ! $DOMAIN =~ ^[0-9a-zA-Z][0-9a-zA-Z._-]*[0-9a-zA-Z]$ ]]; then
			$DIALOG \
					--clear \
					--no-collapse \
					--cr-wrap \
					--msgbox "Домен содержит недопустимые символы!" 10 40
		else
			cat > /home/localadmin/ALDPro-deploy/inventory/hosts << END
all:
  hosts:
    localhost:
      ansible_user: ansible
      ansible_become: true
      role: first_dc
      admin_password: $PASSWORD1
      FQDN: $HOSTNAME.$DOMAIN
      ip_address: $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).ip)' $IP/$MASK 2>/dev/null)
      ip_netmask: $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).netmask)' $IP/$MASK 2>/dev/null)
      ip_gateway: $(python3 -c 'import ipaddress, sys; print(ipaddress.ip_interface(sys.argv[1]).ip)' $GW/$MASK 2>/dev/null)
END
			>/tmp/log.txt
			echo -e "XXX\n0\n[Ожидает] : Подготовка\n[Ожидает] : Обновление_ОС\n[Ожидает] : Установка_пакетов\n[Ожидает] : Настройка_контроллера\nXXX" >> /tmp/log.txt
			(python3 -c 'import ansible_runner; a = ansible_runner.run(private_data_dir="/home/localadmin/ALDPro-deploy", playbook="playbook.yaml", quiet=True,)'; sleep 5; pkill tail) &
			tail -f /tmp/log.txt | $DIALOG --gauge "" 20 60 0
			if [[ $(cat ./artifacts/*/rc) != 0 ]]; then
				$DIALOG \
						--title "" \
						--clear "$@" \
						--msgbox "Что то пошло не так!" 10 41
				case $? in
				$DIALOG_OK)
					break
					;;
				esac
			else
				$DIALOG \
						--title "" \
						--clear "$@" \
						--msgbox "Работы завершены.\nПароль локального администратора localadmin изменен на пароль учетной записи администратора домена\nКомпьютер будет перезагружен" 10 41
				case $? in
				$DIALOG_OK)
					python3 -c 'import ansible_runner; a = ansible_runner.run(private_data_dir="/home/localadmin/ALDPro-deploy", module="shell", module_args="reboot", host_pattern="localhost", quiet=True,)'
					;;
				esac
			fi
		fi
		;;
	$DIALOG_HELP)
		$DIALOG \
				--clear \
				--no-collapse \
				--cr-wrap \
				--msgbox "Справка тут" 20 55
		;;
	*)
		echo "Return code was $returncode"
		exit
		;;
	esac
done